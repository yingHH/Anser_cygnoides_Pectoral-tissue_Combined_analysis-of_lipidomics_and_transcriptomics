# ref "https://ccb.jhu.edu/software/stringtie/index.shtml?t=manual"
# ref "https://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#count-matrix-input"
library(DESeq2)

args <- commandArgs(trailingOnly = TRUE)
ifile = Readcount.xls
colfile = Coldata.csv
oname = All.DEG_final.xls


# read 'countData' and 'coldata'
countData <- as.matrix(read.csv(ifile, row.names=1))
print(head(countData), quote = TRUE, row.names = FALSE)
countData_head = head(countData)

colData <- read.csv(colfile, row.names=1)
print(head(colData), quote = TRUE, row.names = FALSE)
colData_head = head(colData)

# Check all sample IDs in colData are also in CountData and match their orders
print(all(rownames(colData) %in% colnames(countData)), quote = TRUE, row.names = FALSE)

# Create a DESeqDataSet
dds <- DESeqDataSetFromMatrix(countData = countData,
                            colData = colData,
                            design = ~ condition)
print(dds, row.names = FALSE)

# Run DESeq2
dds <- DESeq(dds)
res <- results(dds)
resOrdered <- res[order(res$padj), ]

# write out
cat("<Write result to> :", oname)
write.csv(resOrdered, oname)

save(dds, file=save_degs)
